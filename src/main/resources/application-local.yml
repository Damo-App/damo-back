spring:
  web:
    resources:
      static-locations: file:/C:/my-upload-dir/
    mvc:
      pathmatch:
        matching-strategy: ant_path_matcher

  autoconfigure:
    exclude:
      - org.springframework.cloud.aws.autoconfigure.context.ContextCredentialsAutoConfiguration
      - org.springframework.cloud.aws.autoconfigure.context.ContextInstanceDataAutoConfiguration
      - org.springframework.cloud.aws.autoconfigure.context.ContextRegionProviderAutoConfiguration
      - org.springframework.cloud.aws.autoconfigure.context.ContextResourceLoaderAutoConfiguration
      - org.springframework.cloud.aws.autoconfigure.context.ContextStackAutoConfiguration
      - org.springframework.cloud.aws.autoconfigure.messaging.MessagingAutoConfiguration
      - org.springframework.cloud.aws.autoconfigure.metrics.CloudWatchExportAutoConfiguration


  jackson:
    time-zone: Asia/Seoul

  data:
    redis:
      host: localhost  # Redis 서버의 호스트 주소를 설정
      port: 6379       # Redis 서버가 수신 대기하는 포트를 설정

  h2:
    console:
      enabled: true
      path: /h2
      settings:
        web-allow-others: true

  datasource:
    # url: jdbc:h2:mem:test
    # url: jdbc:h2:file:C:/h2-db/test;AUTO_SERVER=TRUE
    url: jdbc:h2:file:C:/h2-db/test4;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE

  jpa:
    hibernate:
      ddl-auto: update  # (1) 스키마 자동 생성
    show-sql: true      # (2) SQL 쿼리 출력
    properties:
      hibernate:
        format_sql: true  # (3) SQL pretty print
    defer-datasource-initialization: true  # data.sql 실행 시점 조정

  sql:
    init:
      mode: always
      # data-locations: classpath*:db/h2/data.sql

file:
  # upload-dir: /app/fileImage
  # default-image: http://ec2-3-39-190-50.ap-northeast-2.compute.amazonaws.com:8080/images/noImage.png
  upload-dir: /file-assets
  default-image: /file-assets/noImage.png

cloud:
  aws:
    credentials:
      instance-profile: false
      accessKey: 1234
      secretKey: 1234
    region:
      auto: false
      static: ap-northeast-2
    s3:
      bucket: 1234
    stack:
      auto: false

logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG

server:
  servlet:
    encoding:
      force-response: true

mail:
  address:
    # admin: ${ADMIN_EMAIL}
    admin: admin123@gmail.com

jwt:
  key: ${JWT_SECRET_KEY}
  # key: abcabc0101
  access-token-expiration-minutes: 1000
  refresh-token-expiration-minutes: 4200

springdoc:
  default-flat-param-object: true
  use-fqn: true
  api-docs:
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    try-it-out-enabled: true
